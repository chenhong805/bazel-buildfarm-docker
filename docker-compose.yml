version: "2"

services:
  buildfarm_redis:
    restart: always
    image: redis:latest
    network_mode: "host"
    #ports:
    #  - 6379:6379
  server:
    restart: always
    build:
      context: .
    command: 'bazel run //src/main/java/build/buildfarm:buildfarm-server -- --jvm_flag=-Djava.util.logging.config.file=/app/bazel-buildfarm/examples/logging.properties /app/bazel-buildfarm/examples/config.minimal.yml'
    volumes:
      - ./config:/config
    network_mode: "host"
    #ports:
    #  - 8980:8980
    depends_on:
      - buildfarm_redis

  worker:
    restart: always
    # entrypoint: "/app/buildfarm-operationqueue-worker /config/worker.config"
    command: 'bazel run //src/main/java/build/buildfarm:buildfarm-shard-worker -- --jvm_flag=-Djava.util.logging.config.file=/app/bazel-buildfarm/examples/logging.properties /app/bazel-buildfarm/examples/config.minimal.yml'
    build:
      context: .
    volumes:
      - ./config:/config
    network_mode: "host"
    depends_on:
      - server


# Note:
# this works now.

# jinhongc@jinhongc-PowerEdge-R630-2:~/git/tesseract$ cat .bazelrc 
# build --remote_executor=grpc://localhost:8980


# TODO:
# [done] upgrade image in Dockerfile to use latest Dockerfile2.Dockerfile image to have all compilation tool and libraries dependencies.
# [done] more workers (1 worker multiple CPUs, can deploy to other machine later)
# [done] optimize server and worker config? (already using max cpu)

# build command: bazel build --remote_executor=grpc://<host>:8980 <bazel_target>
